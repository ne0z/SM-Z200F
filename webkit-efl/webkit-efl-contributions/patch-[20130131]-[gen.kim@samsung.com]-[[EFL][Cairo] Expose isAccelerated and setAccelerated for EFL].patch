diff --git a/Source/WebCore/ChangeLog b/Source/WebCore/ChangeLog
index 7808ec0..f6c373d 100644
--- a/Source/WebCore/ChangeLog
+++ b/Source/WebCore/ChangeLog
@@ -1,3 +1,29 @@
+2013-01-31  Kyungjin Kim  <gen.kim@samsung.com>
+
+        [EFL][Cairo] Expose isAccelerated and setAccelerated for EFL
+        Need the bug URL (OOPS!).
+
+        Reviewed by NOBODY (OOPS!).
+
+        isAccelerated and setAccelerated are exposed for the ports using Skia and CG, but not Cairo
+        This patch adds them in Cairo for EFL and other ports using it.
+
+        No new tests. Covered by existing tests.
+
+        * platform/graphics/GraphicsContext.cpp:
+        (WebCore):
+        * platform/graphics/cairo/GraphicsContextCairo.cpp:
+        (WebCore::GraphicsContext::isAcceleratedContext):
+        (WebCore):
+        * platform/graphics/cairo/ImageBufferCairo.cpp:
+        (WebCore::ImageBuffer::ImageBuffer):
+        * platform/graphics/cairo/PlatformContextCairo.cpp:
+        (WebCore::PlatformContextCairo::PlatformContextCairo):
+        * platform/graphics/cairo/PlatformContextCairo.h:
+        (WebCore::PlatformContextCairo::isAccelerated):
+        (WebCore::PlatformContextCairo::setAccelerated):
+        (PlatformContextCairo):
+
 2013-01-30  Patrick Gansterer  <paroga@webkit.org>
 
         Port DragImageWin.cpp to WinCE
diff --git a/Source/WebCore/platform/graphics/GraphicsContext.cpp b/Source/WebCore/platform/graphics/GraphicsContext.cpp
index 1d57207..f220a02 100644
--- a/Source/WebCore/platform/graphics/GraphicsContext.cpp
+++ b/Source/WebCore/platform/graphics/GraphicsContext.cpp
@@ -742,7 +742,7 @@ void GraphicsContext::setPlatformShouldSmoothFonts(bool)
 }
 #endif
 
-#if !USE(SKIA) && !USE(CG)
+#if !USE(SKIA) && !USE(CG) && !USE(CAIRO)
 bool GraphicsContext::isAcceleratedContext() const
 {
     return false;
diff --git a/Source/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp b/Source/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
index 069ac29..cd04df2 100644
--- a/Source/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
+++ b/Source/WebCore/platform/graphics/cairo/GraphicsContextCairo.cpp
@@ -1159,6 +1159,11 @@ void GraphicsContext::set3DTransform(const TransformationMatrix& transform)
 }
 #endif
 
+bool GraphicsContext::isAcceleratedContext() const
+{
+    return platformContext()->isAccelerated();
+}
+
 } // namespace WebCore
 
 #endif // USE(CAIRO)
diff --git a/Source/WebCore/platform/graphics/cairo/ImageBufferCairo.cpp b/Source/WebCore/platform/graphics/cairo/ImageBufferCairo.cpp
index 6953932..c9285c64 100644
--- a/Source/WebCore/platform/graphics/cairo/ImageBufferCairo.cpp
+++ b/Source/WebCore/platform/graphics/cairo/ImageBufferCairo.cpp
@@ -54,7 +54,7 @@ ImageBufferData::ImageBufferData(const IntSize&)
 {
 }
 
-ImageBuffer::ImageBuffer(const IntSize& size, float /* resolutionScale */, ColorSpace, RenderingMode, DeferralMode, bool& success)
+ImageBuffer::ImageBuffer(const IntSize& size, float /* resolutionScale */, ColorSpace, RenderingMode renderingMode, DeferralMode, bool& success)
     : m_data(size)
     , m_size(size)
     , m_logicalSize(size)
@@ -70,6 +70,12 @@ ImageBuffer::ImageBuffer(const IntSize& size, float /* resolutionScale */, Color
     m_data.m_platformContext.setCr(cr.get());
     m_context = adoptPtr(new GraphicsContext(&m_data.m_platformContext));
     success = true;
+#if ENABLE(ACCELERATED_2D_CANVAS)
+    if (renderingMode == Accelerated)
+        context()->platformContext()->setAccelerated(true);
+#else
+    UNUSED_PARAM(renderingMode);
+#endif
 }
 
 ImageBuffer::~ImageBuffer()
diff --git a/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.cpp b/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.cpp
index 865d152..92fd924 100644
--- a/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.cpp
+++ b/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.cpp
@@ -82,6 +82,7 @@ public:
 
 PlatformContextCairo::PlatformContextCairo(cairo_t* cr)
     : m_cr(cr)
+    , m_accelerated(false)
 {
     m_stateStack.append(State());
     m_state = &m_stateStack.last();
diff --git a/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h b/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h
index d7f1205..436407ae 100644
--- a/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h
+++ b/Source/WebCore/platform/graphics/cairo/PlatformContextCairo.h
@@ -67,6 +67,9 @@ public:
     enum AlphaPreservation { DoNotPreserveAlpha, PreserveAlpha };
     void prepareForStroking(const GraphicsContextState&, AlphaPreservation = PreserveAlpha);
 
+    bool isAccelerated() const { return m_accelerated; }
+    void setAccelerated(bool accelerated) { m_accelerated = accelerated; }
+
 private:
     void clipForPatternFilling(const GraphicsContextState&);
 
@@ -79,6 +82,7 @@ private:
     // GraphicsContext is responsible for managing the state of the ShadowBlur,
     // so it does not need to be on the state stack.
     ShadowBlur m_shadowBlur;
+    bool m_accelerated;
 
 };
 
